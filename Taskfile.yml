version: 3
tasks:
  terraform-init:
    desc: Initialize Terraform.
    dir: infrastructure
    sources:
      - "**/main.tf"
    cmds:
      - cd ecr && terraform init && cd ..
      - cd service && terraform init && cd ..

  deploy-ecr:
    desc: Deploy the ECR to store docker images.
    dir: infrastructure/ecr
    deps:
      - terraform-init
    cmds:
      - terraform validate
      - terraform apply -auto-approve -input=false

  deploy-service:
    desc: Deploy the service to ECS.
    dir: infrastructure/service
    deps:
      - terraform-init
    cmds:
      - terraform validate
      - terraform apply -auto-approve -input=false

  load-img-to-ecr:
    desc: Load the image to ECR.
    sources:
      - src/**/*.py
    dotenv:
      - ".env"
    cmds:
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_URI
      - docker build -t ecs-api-test-repository .
      - docker tag ecs-api-test-repository:latest $ECR_URI/ecs-api-test-repository:latest
      - docker push $ECR_URI/ecs-api-test-repository:latest

  deploy:
    desc: Deploy the function to AWS.
    dir: infrastructure
    deps:
      - terraform-init
    cmds:
      - task: deploy-ecr
      - task: load-img-to-ecr
      - task: deploy-service

  take-down-service:
    desc: Take down the service infrastructure from AWS.
    dir: infrastructure/service
    cmds:
      - terraform destroy -auto-approve -input=false

  take-down-ecr:
    desc: Take down the ECR infrastructure from AWS.
    dir: infrastructure/ecr
    cmds:
      - terraform destroy -auto-approve -input=false

  take-down:
    desc: Take down the infrastructure from AWS.
    dir: infrastructure
    cmds:
      - task: take-down-service
      - task: take-down-ecr
